{"version":3,"file":"VueFinalModal.esm.js","sources":["../lib/utils/focusTrap.js","../lib/utils/bodyScrollLock.js","../lib/VueFinalModal.vue","../lib/VueFinalModal.vue?vue&type=template&id=2836fdb5&lang.js","../node_modules/style-inject/dist/style-inject.es.js","../lib/ModalsContainer.vue","../lib/ModalsContainer.vue?vue&type=template&id=74d49173&lang.js","../lib/PluginCore.js","../lib/utils/errors.js","../lib/Plugin.js"],"sourcesContent":["// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n    this.enable = this.enable.bind(this)\n    this.disable = this.disable.bind(this)\n    this.firstElement = this.firstElement.bind(this)\n    this.lastElement = this.lastElement.bind(this)\n  }\n\n  lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  firstElement() {\n    return this.elements[0] || null\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement())) {\n        this.lastElement().focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement())) {\n      this.firstElement().focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  enabled() {\n    return !!this.root\n  }\n\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\nexport default FocusTrap\n","// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div class=\"vfm__content\" :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\" :style=\"contentStyle\">\n          <slot :params=\"params\" />\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [String, Object, Array], default: '' },\n    overlayStyle: { type: [String, Object, Array], default: '' },\n    contentStyle: { type: [String, Object, Array], default: '' },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue', 'click-outside', 'before-open', 'opened', 'before-close', 'closed'],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        if (emitEvent('before-open', false)) {\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      if (props.focusTrap) {\n        $focusTrap.enable(vfmContainer.value)\n      }\n      emit('opened', createModalEvent({ type: 'opened' }))\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('closed', event)\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function toggle(show, _params) {\n      const value = typeof show === 'boolean' ? show : !props.modelValue\n      if (value && arguments.length === 2) {\n        params.value = _params\n      }\n      emit('update:modelValue', value)\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n</style>\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div class=\"vfm__content\" :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\" :style=\"contentStyle\">\n          <slot :params=\"params\" />\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [String, Object, Array], default: '' },\n    overlayStyle: { type: [String, Object, Array], default: '' },\n    contentStyle: { type: [String, Object, Array], default: '' },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue', 'click-outside', 'before-open', 'opened', 'before-close', 'closed'],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        if (emitEvent('before-open', false)) {\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      if (props.focusTrap) {\n        $focusTrap.enable(vfmContainer.value)\n      }\n      emit('opened', createModalEvent({ type: 'opened' }))\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('closed', event)\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function toggle(show, _params) {\n      const value = typeof show === 'boolean' ? show : !props.modelValue\n      if (value && arguments.length === 2) {\n        params.value = _params\n      }\n      emit('update:modelValue', value)\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @closed=\"slice(index)\"\n      @beforeOpen=\"e => beforeOpen(e, modal)\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <template v-if=\"isString(slot)\">{{ slot }}</template>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  computed: {\n    api() {\n      return this[this.options.key]\n    }\n  },\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    beforeOpen(e, modal) {\n      e.ref.params.value = modal.params\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @closed=\"slice(index)\"\n      @beforeOpen=\"e => beforeOpen(e, modal)\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  computed: {\n    api() {\n      return this[this.options.key]\n    }\n  },\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    beforeOpen(e, modal) {\n      e.ref.params.value = modal.params\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModal from './VueFinalModal.vue'\nimport ModalsContainer from './ModalsContainer.vue'\nimport { shallowReactive } from 'vue'\n\nfunction assignOptions(component, options) {\n  const _component = { ...component }\n  Object.assign(_component.props, {\n    options: { type: Object, default: () => options }\n  })\n  return _component\n}\n\nfunction createVfm(options) {\n  let vfm\n\n  return function() {\n    vfm = {\n      show(modal, ...args) {\n        switch (typeof modal) {\n          case 'string':\n            this.toggle(modal, true, ...args)\n            break\n          case 'object':\n            {\n              const defaultModal = {\n                value: true,\n                id: Symbol('dynamicModal'),\n                component: options.componentName,\n                bind: {},\n                slots: {},\n                on: {},\n                params: args[0]\n              }\n              this.dynamicModals.push(shallowReactive(Object.assign(defaultModal, modal)))\n            }\n            break\n        }\n      },\n      hide(...names) {\n        this.toggle(names, false)\n      },\n      hideAll() {\n        for (let i = this.openedModals.length - 1; i >= 0; i--) {\n          this.openedModals[i].emit('update:modelValue', false)\n        }\n      },\n      toggle(name, ...args) {\n        const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n        modals.forEach(modal => modal.toggle(...args))\n      },\n      get(...names) {\n        return this.modals.filter(modal => names.includes(modal.props.name))\n      },\n      dynamicModals: shallowReactive([]),\n      openedModals: [],\n      modals: []\n    }\n    return vfm\n  }\n}\n\nexport function bindPrototype(app, options) {\n  const vfm = createVfm(options)()\n  Object.defineProperty(app.config.globalProperties, options.key, {\n    get() {\n      return vfm\n    }\n  })\n  app.provide(options.key, vfm)\n}\n\nexport function registModal(app, options) {\n  app.component(options.componentName, assignOptions(VueFinalModal, options))\n}\nexport function registContainer(app, options) {\n  app.component(options.dynamicContainerName, assignOptions(ModalsContainer, options))\n}\n","export const DUPLICATE_PLUGIN_COMPONENT =\n  '[vue-final-modal] Duplicate registration API key and componentName of VueFinalModal.'\n\nexport const DUPLICATE_COMPONENT = '[vue-final-modal] Duplicate registration componentName of VueFinalModal.'\n\nexport const DUPLICATE_DYNAMIC_CONTAINER =\n  '[vue-final-modal] Duplicate registration dynamicContainerName of ModalsContainer.'\n","import { bindPrototype, registModal, registContainer } from './PluginCore'\nimport { DUPLICATE_PLUGIN_COMPONENT, DUPLICATE_COMPONENT, DUPLICATE_DYNAMIC_CONTAINER } from './utils/errors'\n\nconst defaultOptions = {\n  componentName: 'VueFinalModal',\n  dynamicContainerName: 'ModalsContainer',\n  key: '$vfm'\n}\n\nconst Plugin = () => ({\n  install(app, options) {\n    const _options = Object.assign({}, defaultOptions, options)\n    const isDuplicateKey = app.config.globalProperties[_options.key]\n    const isDuplicateComponent = app._context.components[_options.componentName]\n    const isDuplicateDynamicContainer = app._context.components[_options.dynamicContainerName]\n\n    if (isDuplicateComponent || isDuplicateDynamicContainer) {\n      if (typeof window !== 'undefined') {\n        if (isDuplicateKey) {\n          console.error(DUPLICATE_PLUGIN_COMPONENT)\n        }\n        if (isDuplicateComponent) {\n          console.error(DUPLICATE_COMPONENT)\n        }\n        if (isDuplicateDynamicContainer) {\n          console.error(DUPLICATE_DYNAMIC_CONTAINER)\n        }\n      }\n    } else {\n      if (!isDuplicateKey) {\n        bindPrototype(app, _options)\n      }\n      registModal(app, _options)\n      registContainer(app, _options)\n    }\n  }\n})\n\nexport default Plugin\n"],"names":["queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","enable","disable","firstElement","lastElement","length","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","addEventListener","removeEventListener","hasPassiveEvents","window","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","clientY","initialClientY","hasAnyScrollableEl","el","delta","path","push","classList","contains","parentElement","composedPath","forEach","nodeType","Node","ELEMENT_NODE","style","getComputedStyle","includes","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","e","target","touches","disableBodyScroll","targetElement","options","lock","ontouchstart","targetTouches","ontouchmove","isTargetElementTotallyScrolled","stopPropagation","handleScroll","passive","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","body","getPropertyValue","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","TransitionState","props","name","type","String","default","modelValue","Boolean","ssr","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","lockScroll","hideOverlay","clickToClose","escToClose","preventClick","attach","validator","val","transition","overlayTransition","zIndexAuto","zIndexBase","Number","zIndex","focusRetain","focusTrap","emits","setup","emit","uid","Symbol","ref","vfmContainer","vfmOverlayTransition","vfmTransition","$vfm","inject","modalStackIndex","$focusTrap","visible","visibility","reactive","modal","overlay","overlayTransitionState","modalTransitionState","_stopEvent","params","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","value","calculateZIndex","bindStyle","getModalInfo","getAttachElement","handleLockScroll","toggle","mounted","emitEvent","appendChild","index","openedModals","findIndex","vm","splice","nextTick","warn","concat","close","$_vm","querySelector","createModalEvent","eventProps","eventType","stopEvent","stop","show","_params","arguments","watch","display","flush","modals","onMounted","onBeforeUnmount","remove","beforeOverlayEnter","afterOverlayEnter","beforeOverlayLeave","afterOverlayLeave","beforeModalEnter","afterModalEnter","beforeModalLeave","enabled","afterModalLeave","onClickContainer","onEsc","$props","$setup","_createBlock","class","onKeydown","_createVNode","_mergeProps","onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave","toString","role","tabindex","onClick","_renderSlot","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","api","methods","slice","dynamicModals","beforeOpen","isString","assignOptions","component","_component","assign","bindPrototype","app","vfm","args","defaultModal","id","componentName","slots","on","shallowReactive","hide","names","hideAll","i","isArray","get","createVfm","defineProperty","config","globalProperties","provide","_hoisted_1","$options","_toHandlers","onClosed","onBeforeOpen","slot","innerHTML","defaultOptions","dynamicContainerName","install","_options","isDuplicateKey","isDuplicateComponent","_context","components","isDuplicateDynamicContainer","VueFinalModal","registModal","ModalsContainer","registContainer"],"mappings":"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"}